// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplementLand.Infrastructure;

#nullable disable

namespace SupplementLand.Infrastructure.Migrations
{
    [DbContext(typeof(SupplementLandDb))]
    partial class SupplementLandDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("PackagesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("PackageProduct");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "مکمل‌های ورزشی"
                        },
                        new
                        {
                            Id = 2,
                            Name = "پروتئین‌ها",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "وی (Whey)",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "کازئین (Casein)",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "سویا (Soy)",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "پروتئین‌های گیاهی",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "پروتئین تخم‌مرغ / گوشت",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "آمینواسیدها",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "BCAA",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 10,
                            Name = "EAA",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 11,
                            Name = "گلوتامین",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 12,
                            Name = "آرژنین",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 13,
                            Name = "بتاآلانین",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 14,
                            Name = "کارنیتین",
                            ParentId = 8
                        },
                        new
                        {
                            Id = 15,
                            Name = "کراتین‌ها",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 16,
                            Name = "کراتین مونوهیدرات",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 17,
                            Name = "کراتین HCL",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 18,
                            Name = "کراتین میکرونایزد",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 19,
                            Name = "کراتین‌های ترکیبی",
                            ParentId = 15
                        },
                        new
                        {
                            Id = 20,
                            Name = "گینرها (افزایش وزن)",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "مس گینر",
                            ParentId = 20
                        },
                        new
                        {
                            Id = 22,
                            Name = "کربو-پروتئین",
                            ParentId = 20
                        },
                        new
                        {
                            Id = 23,
                            Name = "چربی‌سوزها",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 24,
                            Name = "ترموژنیک",
                            ParentId = 23
                        },
                        new
                        {
                            Id = 25,
                            Name = "L-Carnitine",
                            ParentId = 23
                        },
                        new
                        {
                            Id = 26,
                            Name = "CLA",
                            ParentId = 23
                        },
                        new
                        {
                            Id = 27,
                            Name = "بلوکرهای کربوهیدرات/چربی",
                            ParentId = 23
                        },
                        new
                        {
                            Id = 28,
                            Name = "مکمل‌های انرژی‌زا و پیش‌تمرین",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 29,
                            Name = "پمپ (Nitric Oxide Boosters)",
                            ParentId = 28
                        },
                        new
                        {
                            Id = 30,
                            Name = "کافئین",
                            ParentId = 28
                        },
                        new
                        {
                            Id = 31,
                            Name = "ترکیبات محرک",
                            ParentId = 28
                        },
                        new
                        {
                            Id = 32,
                            Name = "ویتامین‌ها و مواد معدنی",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 33,
                            Name = "مولتی‌ویتامین",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 34,
                            Name = "ویتامین D",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 35,
                            Name = "ویتامین C",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 36,
                            Name = "ویتامین‌های گروه B",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 37,
                            Name = "کلسیم",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 38,
                            Name = "منیزیم",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 39,
                            Name = "روی (Zinc)",
                            ParentId = 32
                        },
                        new
                        {
                            Id = 40,
                            Name = "اسیدهای چرب ضروری",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 41,
                            Name = "امگا 3",
                            ParentId = 40
                        },
                        new
                        {
                            Id = 42,
                            Name = "امگا 6",
                            ParentId = 40
                        },
                        new
                        {
                            Id = 43,
                            Name = "امگا 9",
                            ParentId = 40
                        },
                        new
                        {
                            Id = 44,
                            Name = "مکمل‌های ریکاوری و سلامت مفاصل",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 45,
                            Name = "گلوکوزامین",
                            ParentId = 44
                        },
                        new
                        {
                            Id = 46,
                            Name = "کندرویتین",
                            ParentId = 44
                        },
                        new
                        {
                            Id = 47,
                            Name = "MSM",
                            ParentId = 44
                        },
                        new
                        {
                            Id = 48,
                            Name = "مکمل‌های هورمونی",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 49,
                            Name = "بوستر تستوسترون",
                            ParentId = 48
                        },
                        new
                        {
                            Id = 50,
                            Name = "مهارکننده‌های استروژن",
                            ParentId = 48
                        },
                        new
                        {
                            Id = 51,
                            Name = "ZMA",
                            ParentId = 48
                        },
                        new
                        {
                            Id = 52,
                            Name = "مکمل‌های ترکیبی و تخصصی",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 53,
                            Name = "پیش‌ورزش (Pre-Workout)",
                            ParentId = 52
                        },
                        new
                        {
                            Id = 54,
                            Name = "پس‌از‌ورزش (Post-Workout)",
                            ParentId = 52
                        },
                        new
                        {
                            Id = 55,
                            Name = "مولتی بلِند پروتئین",
                            ParentId = 52
                        },
                        new
                        {
                            Id = 56,
                            Name = "نوشیدنی‌ها و ژل‌های ورزشی",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 57,
                            Name = "ایزوتونیک",
                            ParentId = 56
                        },
                        new
                        {
                            Id = 58,
                            Name = "ژل انرژی",
                            ParentId = 56
                        },
                        new
                        {
                            Id = 59,
                            Name = "نوشیدنی‌های پروتئینی آماده",
                            ParentId = 56
                        });
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Percentage")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("documents");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Factory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("factories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "آمریکا",
                            Name = "Optimum Nutrition (ON)"
                        },
                        new
                        {
                            Id = 2,
                            Country = "آمریکا",
                            Name = "BSN (Bio-Engineered Supplements & Nutrition)"
                        },
                        new
                        {
                            Id = 3,
                            Country = "آمریکا",
                            Name = "Cellucor (C4)"
                        },
                        new
                        {
                            Id = 4,
                            Country = "کانادا/آمریکا",
                            Name = "MuscleTech"
                        },
                        new
                        {
                            Id = 5,
                            Country = "آمریکا",
                            Name = "Dymatize Nutrition"
                        },
                        new
                        {
                            Id = 6,
                            Country = "آمریکا",
                            Name = "Universal Nutrition"
                        },
                        new
                        {
                            Id = 7,
                            Country = "آمریکا",
                            Name = "Animal (Universal Nutrition)"
                        },
                        new
                        {
                            Id = 8,
                            Country = "آمریکا",
                            Name = "Gaspari Nutrition"
                        },
                        new
                        {
                            Id = 9,
                            Country = "آمریکا",
                            Name = "Evlution Nutrition (EVL)"
                        },
                        new
                        {
                            Id = 10,
                            Country = "آمریکا",
                            Name = "MusclePharm"
                        },
                        new
                        {
                            Id = 11,
                            Country = "آمریکا",
                            Name = "Rule One Proteins"
                        },
                        new
                        {
                            Id = 12,
                            Country = "آمریکا",
                            Name = "Redcon1"
                        },
                        new
                        {
                            Id = 13,
                            Country = "آمریکا",
                            Name = "GAT Sport (German American Technologies)"
                        },
                        new
                        {
                            Id = 14,
                            Country = "آمریکا",
                            Name = "Nutrex Research"
                        },
                        new
                        {
                            Id = 15,
                            Country = "آمریکا",
                            Name = "ProSupps"
                        },
                        new
                        {
                            Id = 16,
                            Country = "کانادا",
                            Name = "ALLMAX Nutrition"
                        },
                        new
                        {
                            Id = 17,
                            Country = "آمریکا",
                            Name = "Kaged Muscle"
                        },
                        new
                        {
                            Id = 18,
                            Country = "آمریکا",
                            Name = "RSP Nutrition"
                        },
                        new
                        {
                            Id = 19,
                            Country = "آمریکا",
                            Name = "JYM Supplement Science"
                        },
                        new
                        {
                            Id = 20,
                            Country = "آمریکا",
                            Name = "Performix"
                        },
                        new
                        {
                            Id = 21,
                            Country = "بریتانیا",
                            Name = "Applied Nutrition"
                        },
                        new
                        {
                            Id = 22,
                            Country = "آمریکا",
                            Name = "NOW Foods"
                        },
                        new
                        {
                            Id = 23,
                            Country = "آمریکا",
                            Name = "GNC"
                        },
                        new
                        {
                            Id = 24,
                            Country = "آمریکا",
                            Name = "Quest Nutrition"
                        },
                        new
                        {
                            Id = 25,
                            Country = "آمریکا",
                            Name = "Nature's Best"
                        },
                        new
                        {
                            Id = 26,
                            Country = "آمریکا",
                            Name = "Sports Research"
                        },
                        new
                        {
                            Id = 27,
                            Country = "آمریکا",
                            Name = "BPN (Bare Performance Nutrition)"
                        },
                        new
                        {
                            Id = 28,
                            Country = "استرالیا",
                            Name = "Fixx Nutrition"
                        },
                        new
                        {
                            Id = 29,
                            Country = "بریتانیا",
                            Name = "Huel"
                        },
                        new
                        {
                            Id = 30,
                            Country = "آمریکا",
                            Name = "G Fuel"
                        },
                        new
                        {
                            Id = 31,
                            Country = "آمریکا",
                            Name = "Legion Athletics"
                        },
                        new
                        {
                            Id = 32,
                            Country = "آمریکا",
                            Name = "1st Phorm"
                        },
                        new
                        {
                            Id = 33,
                            Country = "آمریکا",
                            Name = "Alani Nu"
                        },
                        new
                        {
                            Id = 34,
                            Country = "آمریکا",
                            Name = "Alpha Lion"
                        },
                        new
                        {
                            Id = 35,
                            Country = "آمریکا",
                            Name = "AP Regimen"
                        },
                        new
                        {
                            Id = 36,
                            Country = "آمریکا",
                            Name = "Axe & Sledge"
                        },
                        new
                        {
                            Id = 37,
                            Country = "سوئد",
                            Name = "Barebells"
                        },
                        new
                        {
                            Id = 38,
                            Country = "کانادا",
                            Name = "Biosteel"
                        },
                        new
                        {
                            Id = 39,
                            Country = "آمریکا",
                            Name = "Built"
                        },
                        new
                        {
                            Id = 40,
                            Country = "آمریکا",
                            Name = "Ronnie Coleman Signature Series"
                        },
                        new
                        {
                            Id = 41,
                            Country = "هند",
                            Name = "HealthKart"
                        },
                        new
                        {
                            Id = 42,
                            Country = "آمریکا",
                            Name = "Sporter.com"
                        },
                        new
                        {
                            Id = 43,
                            Country = "آمریکا",
                            Name = "Bodybuilding.com"
                        },
                        new
                        {
                            Id = 44,
                            Country = "آمریکا",
                            Name = "iHerb"
                        },
                        new
                        {
                            Id = 45,
                            Country = "آمریکا",
                            Name = "Glanbia PLC"
                        },
                        new
                        {
                            Id = 46,
                            Country = "سوئیس",
                            Name = "Nestlé"
                        },
                        new
                        {
                            Id = 47,
                            Country = "آمریکا",
                            Name = "Abbott Laboratories"
                        },
                        new
                        {
                            Id = 48,
                            Country = "آمریکا",
                            Name = "PepsiCo Inc."
                        },
                        new
                        {
                            Id = 49,
                            Country = "آمریکا",
                            Name = "Coca-Cola Company"
                        },
                        new
                        {
                            Id = 50,
                            Country = "اتریش",
                            Name = "Red Bull GmbH"
                        },
                        new
                        {
                            Id = 51,
                            Country = "آمریکا",
                            Name = "Herbalife"
                        },
                        new
                        {
                            Id = 52,
                            Country = "آمریکا",
                            Name = "Alticor Inc."
                        },
                        new
                        {
                            Id = 53,
                            Country = "آمریکا",
                            Name = "Simply Good Foods Co."
                        },
                        new
                        {
                            Id = 54,
                            Country = "چین",
                            Name = "Xiwang Group Co., Ltd"
                        },
                        new
                        {
                            Id = 55,
                            Country = "آمریکا",
                            Name = "FitLife Brands"
                        },
                        new
                        {
                            Id = 56,
                            Country = "آمریکا",
                            Name = "Post Holdings"
                        },
                        new
                        {
                            Id = 57,
                            Country = "آمریکا",
                            Name = "Cizzle Brands Corporation"
                        },
                        new
                        {
                            Id = 58,
                            Country = "آمریکا",
                            Name = "Mondelez International, Inc."
                        },
                        new
                        {
                            Id = 59,
                            Country = "آمریکا",
                            Name = "Jarrow Formulas"
                        },
                        new
                        {
                            Id = 60,
                            Country = "آمریکا",
                            Name = "Life Extension"
                        },
                        new
                        {
                            Id = 61,
                            Country = "آمریکا",
                            Name = "Pure Encapsulations"
                        },
                        new
                        {
                            Id = 62,
                            Country = "آمریکا",
                            Name = "Thorne Research"
                        },
                        new
                        {
                            Id = 63,
                            Country = "آمریکا",
                            Name = "Designs for Health"
                        },
                        new
                        {
                            Id = 64,
                            Country = "آمریکا",
                            Name = "NOW Sports"
                        },
                        new
                        {
                            Id = 65,
                            Country = "پرتغال",
                            Name = "Prozis"
                        },
                        new
                        {
                            Id = 66,
                            Country = "مجارستان",
                            Name = "Biotech USA"
                        },
                        new
                        {
                            Id = 67,
                            Country = "مجارستان",
                            Name = "Scitec Nutrition"
                        },
                        new
                        {
                            Id = 68,
                            Country = "چک",
                            Name = "Extrifit"
                        },
                        new
                        {
                            Id = 69,
                            Country = "چک",
                            Name = "BigJoy Nutrition"
                        },
                        new
                        {
                            Id = 70,
                            Country = "آلمان",
                            Name = "Weider Global Nutrition"
                        },
                        new
                        {
                            Id = 71,
                            Country = "آلمان",
                            Name = "ESN (Elite Sports Nutrients)"
                        },
                        new
                        {
                            Id = 72,
                            Country = "آلمان",
                            Name = "FitLine"
                        },
                        new
                        {
                            Id = 73,
                            Country = "ژاپن",
                            Name = "Weider Japan"
                        },
                        new
                        {
                            Id = 74,
                            Country = "ژاپن",
                            Name = "DNS (Daiwa Nutrition Supplements)"
                        },
                        new
                        {
                            Id = 75,
                            Country = "ژاپن",
                            Name = "Meiji Co., Ltd."
                        },
                        new
                        {
                            Id = 76,
                            Country = "ژاپن",
                            Name = "Orihiro Co., Ltd."
                        },
                        new
                        {
                            Id = 77,
                            Country = "آمریکا",
                            Name = "Glanbia Performance Nutrition"
                        },
                        new
                        {
                            Id = 78,
                            Country = "بریتانیا",
                            Name = "Maxinutrition"
                        },
                        new
                        {
                            Id = 79,
                            Country = "بریتانیا",
                            Name = "Reflex Nutrition"
                        },
                        new
                        {
                            Id = 80,
                            Country = "بریتانیا",
                            Name = "The Protein Works"
                        },
                        new
                        {
                            Id = 81,
                            Country = "آفریقای جنوبی",
                            Name = "USN (Ultimate Sports Nutrition)"
                        },
                        new
                        {
                            Id = 82,
                            Country = "آمریکا",
                            Name = "NutraBio"
                        },
                        new
                        {
                            Id = 83,
                            Country = "آمریکا",
                            Name = "MHP (Maximum Human Performance)"
                        },
                        new
                        {
                            Id = 84,
                            Country = "آمریکا",
                            Name = "NutriBiotic"
                        },
                        new
                        {
                            Id = 85,
                            Country = "آمریکا",
                            Name = "Twinlab"
                        },
                        new
                        {
                            Id = 86,
                            Country = "بریتانیا",
                            Name = "Vitabiotics"
                        },
                        new
                        {
                            Id = 87,
                            Country = "آمریکا",
                            Name = "Nature’s Way"
                        },
                        new
                        {
                            Id = 88,
                            Country = "آمریکا",
                            Name = "Solaray"
                        },
                        new
                        {
                            Id = 89,
                            Country = "آمریکا",
                            Name = "Swanson Health Products"
                        },
                        new
                        {
                            Id = 90,
                            Country = "آمریکا",
                            Name = "NutraKey"
                        },
                        new
                        {
                            Id = 91,
                            Country = "آمریکا",
                            Name = "Vital Proteins"
                        },
                        new
                        {
                            Id = 92,
                            Country = "آمریکا",
                            Name = "Ancient Nutrition"
                        },
                        new
                        {
                            Id = 93,
                            Country = "آمریکا",
                            Name = "Orgain"
                        },
                        new
                        {
                            Id = 94,
                            Country = "آمریکا",
                            Name = "Garden of Life"
                        },
                        new
                        {
                            Id = 95,
                            Country = "آمریکا",
                            Name = "Ghost Lifestyle"
                        },
                        new
                        {
                            Id = 96,
                            Country = "آمریکا",
                            Name = "Primeval Labs"
                        },
                        new
                        {
                            Id = 97,
                            Country = "آمریکا",
                            Name = "MAN Sports"
                        },
                        new
                        {
                            Id = 98,
                            Country = "آمریکا",
                            Name = "Isopure"
                        },
                        new
                        {
                            Id = 99,
                            Country = "آمریکا",
                            Name = "CytoSport (Muscle Milk)"
                        },
                        new
                        {
                            Id = 100,
                            Country = "آمریکا",
                            Name = "Xtend (Nutrabolt)"
                        },
                        new
                        {
                            Id = 101,
                            Country = "ایتالیا",
                            Name = "Enervit S.p.A."
                        },
                        new
                        {
                            Id = 102,
                            Country = "بریتانیا",
                            Name = "Myprotein"
                        },
                        new
                        {
                            Id = 103,
                            Country = "استرالیا",
                            Name = "Swisse"
                        },
                        new
                        {
                            Id = 104,
                            Country = "کانادا",
                            Name = "Bioriginal"
                        },
                        new
                        {
                            Id = 105,
                            Country = "چین",
                            Name = "H&H Group"
                        },
                        new
                        {
                            Id = 106,
                            Country = "آلمان",
                            Name = "Orthomol"
                        },
                        new
                        {
                            Id = 107,
                            Country = "آمریکا",
                            Name = "Doctor’s Best"
                        },
                        new
                        {
                            Id = 108,
                            Country = "آمریکا",
                            Name = "Source Naturals"
                        },
                        new
                        {
                            Id = 109,
                            Country = "لهستان",
                            Name = "AllNutrition"
                        },
                        new
                        {
                            Id = 110,
                            Country = "لهستان",
                            Name = "MuscleBear"
                        },
                        new
                        {
                            Id = 111,
                            Country = "ایران",
                            Name = "کارن (PNC)"
                        },
                        new
                        {
                            Id = 112,
                            Country = "ایران",
                            Name = "دوبیس (Dobis Nutrition)"
                        },
                        new
                        {
                            Id = 113,
                            Country = "ایران",
                            Name = "کاله پرو"
                        },
                        new
                        {
                            Id = 114,
                            Country = "ایران",
                            Name = "پگاه"
                        },
                        new
                        {
                            Id = 115,
                            Country = "ایران",
                            Name = "نوتریمد"
                        },
                        new
                        {
                            Id = 116,
                            Country = "ایران",
                            Name = "اپکس (Apex)"
                        },
                        new
                        {
                            Id = 117,
                            Country = "ایران",
                            Name = "آلامو"
                        },
                        new
                        {
                            Id = 118,
                            Country = "ایران",
                            Name = "ابوریحان"
                        },
                        new
                        {
                            Id = 119,
                            Country = "ایران",
                            Name = "ادوی (Advay)"
                        },
                        new
                        {
                            Id = 120,
                            Country = "ایران",
                            Name = "لوکس (LOOX)"
                        },
                        new
                        {
                            Id = 121,
                            Country = "ایران",
                            Name = "های هلث (HiHealth)"
                        },
                        new
                        {
                            Id = 122,
                            Country = "ایران",
                            Name = "پوراطب"
                        },
                        new
                        {
                            Id = 123,
                            Country = "ایران",
                            Name = "نوتراکس (Nutrax)"
                        });
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("ProductId");

                    b.ToTable("offers");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId")
                        .IsUnique();

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId")
                        .IsUnique()
                        .HasFilter("[DiscountId] IS NOT NULL");

                    b.ToTable("packages");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("portfolios");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.PortfolioItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("ProductId");

                    b.ToTable("portfolioItems");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactoryId")
                        .HasColumnType("int");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ProDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Warning")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId")
                        .IsUnique()
                        .HasFilter("[DiscountId] IS NOT NULL");

                    b.HasIndex("FactoryId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Serving")
                        .HasColumnType("int");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("productVariants");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("rates");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.RelatedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<string>("DocumentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("RelatedProduct");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.SupplementFact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Facts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProductId");

                    b.ToTable("supplementFacts");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Amir.azizi1820@gmail.com",
                            FullName = "Amir Azizi",
                            Mobile = "09382530590",
                            Password = "AQAAAAIAAYagAAAAEFEIAVgtkqrlU0buH3fzJT0aDupPd3d4YpB2OoPs247iNvswidO80jqkhiXhXI5f9w==",
                            RefreshToken = "o4N0YWnqgI8CqqLqvB+MZfV83gokJj4o7xkNxx5soKk=",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Hussein.nakhostin2000@gmail.com",
                            FullName = "Hussein Nakhostin",
                            Mobile = "09376700858",
                            Password = "AQAAAAIAAYagAAAAEAB1m2MwA1aqpNTOovEJPwzh/KM2F5QIUja/3RcYUcRGstUyI6BtG2aWQIu9q4UMCw==",
                            RefreshToken = "v5A3cXc7dpn5f0uDkQmL3ZThmLQXgb7F6t7+07r2iNk=",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplementLand.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Category", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Category", "Parent")
                        .WithMany("Childern")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Comment", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Comment", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplementLand.Domain.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Document", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Factory", "Factory")
                        .WithMany("Documents")
                        .HasForeignKey("FactoryId");

                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("Documents")
                        .HasForeignKey("ProductId");

                    b.Navigation("Factory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Offer", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("Offers")
                        .HasForeignKey("ProductId");

                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Order", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Portfolio", "Portfolio")
                        .WithOne("Order")
                        .HasForeignKey("SupplementLand.Domain.Entities.Order", "PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Package", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Discount", "Discount")
                        .WithOne("Package")
                        .HasForeignKey("SupplementLand.Domain.Entities.Package", "DiscountId");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Portfolio", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.User", "User")
                        .WithMany("Portfolio")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.PortfolioItem", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Portfolio", "Portfolio")
                        .WithMany("PortfolioItems")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("PortfolioItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolio");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Product", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplementLand.Domain.Entities.Discount", "Discount")
                        .WithOne("Product")
                        .HasForeignKey("SupplementLand.Domain.Entities.Product", "DiscountId");

                    b.HasOne("SupplementLand.Domain.Entities.Factory", "Factory")
                        .WithMany("Products")
                        .HasForeignKey("FactoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Discount");

                    b.Navigation("Factory");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.ProductVariant", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Rate", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("Rates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupplementLand.Domain.Entities.User", "User")
                        .WithMany("Rates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.RelatedProduct", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("RelatedProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.SupplementFact", b =>
                {
                    b.HasOne("SupplementLand.Domain.Entities.Product", "Product")
                        .WithMany("supplementFacts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Category", b =>
                {
                    b.Navigation("Childern");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Comment", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Discount", b =>
                {
                    b.Navigation("Package");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Factory", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Portfolio", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();

                    b.Navigation("PortfolioItems");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Documents");

                    b.Navigation("Offers");

                    b.Navigation("PortfolioItems");

                    b.Navigation("ProductVariants");

                    b.Navigation("Rates");

                    b.Navigation("RelatedProducts");

                    b.Navigation("supplementFacts");
                });

            modelBuilder.Entity("SupplementLand.Domain.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Portfolio");

                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
